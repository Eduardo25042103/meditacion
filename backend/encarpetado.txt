backend/  
├── app/  
│   ├── core/              # Configuración, seguridad, utilidades  
│   ├── models/            # Modelos de PostgreSQL (SQLAlchemy)  
│   ├── schemas/           # Esquemas de validación (Pydantic)  
│   ├── routes/            # Endpoints: auth, meditaciones, IA, etc.  
│   ├── services/          # Lógica de negocio (stats, notificaciones, IA)  
│   └── utils/             # Helpers (envío de emails, notificaciones)  
├── tests/                 # Pruebas 
├── docker-compose.yml    # Orquestación de contenedores
├── Dockerfile            # Configuración del contenedor FastAPI 
└── requirements.txt       # Dependencias  

----------------------------------------
Tecnología:
FastAPI: Para APIs rápidas y documentación automática (Swagger/OpenAPI).
PostgreSQL: Base de datos relacional (usaremos SQLAlchemy como ORM).
AI: Scikit-learn o NLTK (para recomendaciones básicas basadas en preferencias o estado de ánimo).
Autenticación: JWT (JSON Web Tokens) para sessions.
Notificaciones: Celery + Redis (tareas asíncronas para emails/recordatorios).
Stats/Graphs: Pandas para análisis y Matplotlib/Plotly para gráficos.

----------------------------------------
Pasos para configurar el backend:
source venv/bin/activate
pip install -r requirements.txt
alembic init migrations
alembic upgrade head
docker-compose up --build
docker-compose up -d //base de datos
sql -> docker exec -it postgres_db psql -U postgres -d meditation_db
uvicorn app.main:app --reload

